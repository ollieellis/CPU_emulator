programme path: bin/mips_simulator
initialising registers 
getting binary file 
file size: 40
instructions: 3C093000 35290002 20060005 8D25FFFE 0 AD250002 20210001 1426FFFB 0 8 
address set at 0x10000000: 3C
address set at 0x10000001: 9
address set at 0x10000002: 30
address set at 0x10000003: 0
address set at 0x10000004: 35
address set at 0x10000005: 29
address set at 0x10000006: 0
address set at 0x10000007: 2
address set at 0x10000008: 20
address set at 0x10000009: 6
address set at 0x1000000A: 0
address set at 0x1000000B: 5
address set at 0x1000000C: 8D
address set at 0x1000000D: 25
address set at 0x1000000E: FF
address set at 0x1000000F: FE
address set at 0x10000010: 0
address set at 0x10000011: 0
address set at 0x10000012: 0
address set at 0x10000013: 0
address set at 0x10000014: AD
address set at 0x10000015: 25
address set at 0x10000016: 0
address set at 0x10000017: 2
address set at 0x10000018: 20
address set at 0x10000019: 21
address set at 0x1000001A: 0
address set at 0x1000001B: 1
address set at 0x1000001C: 14
address set at 0x1000001D: 26
address set at 0x1000001E: FF
address set at 0x1000001F: FB
address set at 0x10000020: 0
address set at 0x10000021: 0
address set at 0x10000022: 0
address set at 0x10000023: 0
address set at 0x10000024: 0
address set at 0x10000025: 0
address set at 0x10000026: 0
address set at 0x10000027: 8
executing instruction: 3C093000 at address: 0x10000000
lui result: 0x30000000
executing instruction: 35290002 at address: 0x10000004
ori result: 30000002
executing instruction: 20060005 at address: 0x10000008
addi result: 0x5 source1: 0 signed immediate: 0x5
executing instruction: 8D25FFFE at address: 0x1000000C
address will trigger stdin: 0x30000000
address set at 0x30000000: 0
address set at 0x30000001: 0
address set at 0x30000002: 0
address set at 0x30000003: 68
address set at 0x30000000: 0
address set at 0x30000001: 0
address set at 0x30000002: 0
address set at 0x30000003: 0
stdin from gotchar: 104
loading word at 0x30000000: 68
executing instruction: 0 at address: 0x10000010
executing instruction: AD250002 at address: 0x10000014
store word address: 0x30000004
address will trigger stdout: 0x30000004
address set at 0x30000004: 0
address set at 0x30000005: 0
address set at 0x30000006: 0
address set at 0x30000007: 68
address set at 0x30000004: 0
address set at 0x30000005: 0
address set at 0x30000006: 0
address set at 0x30000007: 0
putchar should be: 104

executing instruction: 20210001 at address: 0x10000018
addi result: 0x1 source1: 0 signed immediate: 0x1
executing instruction: 1426FFFB at address: 0x1000001C
branch address: 1000000C, program counter: 10000020, immediate: FFFB offset: FFFFFFEC source1 reg: 1 source2 reg: 5
executing instruction: 0 at address: 0x10000020
executing instruction: 8D25FFFE at address: 0x1000000C
address will trigger stdin: 0x30000000
address set at 0x30000000: 0
address set at 0x30000001: 0
address set at 0x30000002: 0
address set at 0x30000003: 65
address set at 0x30000000: 0
address set at 0x30000001: 0
address set at 0x30000002: 0
address set at 0x30000003: 0
stdin from gotchar: 101
loading word at 0x30000000: 65
executing instruction: 0 at address: 0x10000010
executing instruction: AD250002 at address: 0x10000014
store word address: 0x30000004
address will trigger stdout: 0x30000004
address set at 0x30000004: 0
address set at 0x30000005: 0
address set at 0x30000006: 0
address set at 0x30000007: 65
address set at 0x30000004: 0
address set at 0x30000005: 0
address set at 0x30000006: 0
address set at 0x30000007: 0
putchar should be: 101

executing instruction: 20210001 at address: 0x10000018
addi result: 0x2 source1: 1 signed immediate: 0x1
executing instruction: 1426FFFB at address: 0x1000001C
branch address: 1000000C, program counter: 10000020, immediate: FFFB offset: FFFFFFEC source1 reg: 2 source2 reg: 5
executing instruction: 0 at address: 0x10000020
executing instruction: 8D25FFFE at address: 0x1000000C
address will trigger stdin: 0x30000000
address set at 0x30000000: 0
address set at 0x30000001: 0
address set at 0x30000002: 0
address set at 0x30000003: 6C
address set at 0x30000000: 0
address set at 0x30000001: 0
address set at 0x30000002: 0
address set at 0x30000003: 0
stdin from gotchar: 108
loading word at 0x30000000: 6C
executing instruction: 0 at address: 0x10000010
executing instruction: AD250002 at address: 0x10000014
store word address: 0x30000004
address will trigger stdout: 0x30000004
address set at 0x30000004: 0
address set at 0x30000005: 0
address set at 0x30000006: 0
address set at 0x30000007: 6C
address set at 0x30000004: 0
address set at 0x30000005: 0
address set at 0x30000006: 0
address set at 0x30000007: 0
putchar should be: 108

executing instruction: 20210001 at address: 0x10000018
addi result: 0x3 source1: 2 signed immediate: 0x1
executing instruction: 1426FFFB at address: 0x1000001C
branch address: 1000000C, program counter: 10000020, immediate: FFFB offset: FFFFFFEC source1 reg: 3 source2 reg: 5
executing instruction: 0 at address: 0x10000020
executing instruction: 8D25FFFE at address: 0x1000000C
address will trigger stdin: 0x30000000
address set at 0x30000000: 0
address set at 0x30000001: 0
address set at 0x30000002: 0
address set at 0x30000003: 6C
address set at 0x30000000: 0
address set at 0x30000001: 0
address set at 0x30000002: 0
address set at 0x30000003: 0
stdin from gotchar: 108
loading word at 0x30000000: 6C
executing instruction: 0 at address: 0x10000010
executing instruction: AD250002 at address: 0x10000014
store word address: 0x30000004
address will trigger stdout: 0x30000004
address set at 0x30000004: 0
address set at 0x30000005: 0
address set at 0x30000006: 0
address set at 0x30000007: 6C
address set at 0x30000004: 0
address set at 0x30000005: 0
address set at 0x30000006: 0
address set at 0x30000007: 0
putchar should be: 108

executing instruction: 20210001 at address: 0x10000018
addi result: 0x4 source1: 3 signed immediate: 0x1
executing instruction: 1426FFFB at address: 0x1000001C
branch address: 1000000C, program counter: 10000020, immediate: FFFB offset: FFFFFFEC source1 reg: 4 source2 reg: 5
executing instruction: 0 at address: 0x10000020
executing instruction: 8D25FFFE at address: 0x1000000C
address will trigger stdin: 0x30000000
address set at 0x30000000: 0
address set at 0x30000001: 0
address set at 0x30000002: 0
address set at 0x30000003: 6F
address set at 0x30000000: 0
address set at 0x30000001: 0
address set at 0x30000002: 0
address set at 0x30000003: 0
stdin from gotchar: 111
loading word at 0x30000000: 6F
executing instruction: 0 at address: 0x10000010
executing instruction: AD250002 at address: 0x10000014
store word address: 0x30000004
address will trigger stdout: 0x30000004
address set at 0x30000004: 0
address set at 0x30000005: 0
address set at 0x30000006: 0
address set at 0x30000007: 6F
address set at 0x30000004: 0
address set at 0x30000005: 0
address set at 0x30000006: 0
address set at 0x30000007: 0
putchar should be: 111

executing instruction: 20210001 at address: 0x10000018
addi result: 0x5 source1: 4 signed immediate: 0x1
executing instruction: 1426FFFB at address: 0x1000001C
executing instruction: 0 at address: 0x10000020
executing instruction: 8 at address: 0x10000024
jr address: 0x0
executing instruction: 0 at address: 0x10000028

*** terminating execution due to end of binary file ***


lw2, lw, Pass, ES5017, | expected output: 104 101 108 108 111 actual output: 104 101 108 108 111 | expected exit code: 0 actual exit code: 0 | extra info: test memory mapped input with lw assuming memory mapped output works. SADLY I WANT TO TEST EOF BUT CANNOT BECAUSE LINUX EOF IS NOT -1 HNNNNNG |
Test conducted on:  19/11/2018 15:47:17
